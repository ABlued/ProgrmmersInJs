const ary = [1029,1071];

function solution(n,m){
    let answer = [];
    const N = n;
    const M = m;

    while(m != 0){
        if(m % n !== 0){
            const temp = m;
            m = n % m;
            n = temp;
        }
    }
    answer.push(n);
    answer.push((M*N) / n);
    return answer;
}  
  // test
  solution(...ary);
// 문제 : https://programmers.co.kr/learn/courses/30/lessons/12940


//   - 최대공약수 공식: 유클리드호제법

// 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다. 
// 이 성질에 따라, b를 r로 나눈 나머지 r’를 구하고, 다시 r을 r’로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.

// - 최소공배수 공식: 두 수의 곱 / 최대공약수

// 유클리드 호제법 예시
// 1071과 1029의 최대공약수를 구하면,

// 1071은 1029로 나누어떨어지지 않기 때문에, 1071을 1029로 나눈 나머지를 구한다. ≫ 42
// 1029는 42로 나누어떨어지지 않기 때문에, 1029를 42로 나눈 나머지를 구한다. ≫ 21
// 42는 21로 나누어떨어진다.
// 따라서, 최대공약수는 21이다.

// 78696과 19332의 최대공약수를 구하면,

//     78696 ＝ 19332×4 ＋ 1368
//     19332 ＝ 1368×14 ＋ 180
//      1368 ＝ 180×7 ＋ 108
//       180 ＝ 108×1 ＋ 72
//       108 ＝ 72×1 ＋ 36
//        72 ＝ 36×2 ＋ 0
// 따라서, 최대공약수는 36이다.

// 유클리드 호제법 : 위키백과 https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95